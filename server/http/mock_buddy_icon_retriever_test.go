// Code generated by mockery v2.53.5. DO NOT EDIT.

package http

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockBuddyIconRetriever is an autogenerated mock type for the BuddyIconRetriever type
type mockBuddyIconRetriever struct {
	mock.Mock
}

type mockBuddyIconRetriever_Expecter struct {
	mock *mock.Mock
}

func (_m *mockBuddyIconRetriever) EXPECT() *mockBuddyIconRetriever_Expecter {
	return &mockBuddyIconRetriever_Expecter{mock: &_m.Mock}
}

// BuddyIcon provides a mock function with given fields: ctx, itemHash
func (_m *mockBuddyIconRetriever) BuddyIcon(ctx context.Context, itemHash []byte) ([]byte, error) {
	ret := _m.Called(ctx, itemHash)

	if len(ret) == 0 {
		panic("no return value specified for BuddyIcon")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []byte) ([]byte, error)); ok {
		return rf(ctx, itemHash)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []byte) []byte); ok {
		r0 = rf(ctx, itemHash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, []byte) error); ok {
		r1 = rf(ctx, itemHash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockBuddyIconRetriever_BuddyIcon_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BuddyIcon'
type mockBuddyIconRetriever_BuddyIcon_Call struct {
	*mock.Call
}

// BuddyIcon is a helper method to define mock.On call
//   - ctx context.Context
//   - itemHash []byte
func (_e *mockBuddyIconRetriever_Expecter) BuddyIcon(ctx interface{}, itemHash interface{}) *mockBuddyIconRetriever_BuddyIcon_Call {
	return &mockBuddyIconRetriever_BuddyIcon_Call{Call: _e.mock.On("BuddyIcon", ctx, itemHash)}
}

func (_c *mockBuddyIconRetriever_BuddyIcon_Call) Run(run func(ctx context.Context, itemHash []byte)) *mockBuddyIconRetriever_BuddyIcon_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].([]byte))
	})
	return _c
}

func (_c *mockBuddyIconRetriever_BuddyIcon_Call) Return(_a0 []byte, _a1 error) *mockBuddyIconRetriever_BuddyIcon_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockBuddyIconRetriever_BuddyIcon_Call) RunAndReturn(run func(context.Context, []byte) ([]byte, error)) *mockBuddyIconRetriever_BuddyIcon_Call {
	_c.Call.Return(run)
	return _c
}

// newMockBuddyIconRetriever creates a new instance of mockBuddyIconRetriever. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockBuddyIconRetriever(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockBuddyIconRetriever {
	mock := &mockBuddyIconRetriever{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
